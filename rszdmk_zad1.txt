#include <LiquidCrystal.h>
#include <util/delay.h>


LiquidCrystal lcd(A0, A1, A2, A3, A4, A5);

unsigned char  pritisak = 1; // za softversko diferenciranje
unsigned char redosled[5];
unsigned char mesto_tastera;
int brojac = 0;
void znak(){
byte herc[8] = {
B00000 ,
B01010 ,
B11111 ,
B11111 ,
B01110 ,
B00100 ,
B00000 ,
};

byte karo[8] = {
B00100 ,
B01110 ,
B11111 ,
B01110 ,
B00100 ,
B00000 ,
B00000 ,
};

byte pik[8] = {
B00000,
B00100 ,
B01110 ,
B11111 ,
B00100 ,
B00000 ,
B00000 ,
};

byte tref[8] = {
B00110 ,
B00110 ,
B11111 ,
B11111 ,
B00100 ,
B00100 ,
B00100 ,
};

  lcd.createChar(0 , herc);
  lcd.createChar(1 , karo);
  lcd.createChar(2 , pik);
  lcd.createChar(3 , tref);
}
char ocitaj_taster()
{
  char taster = 0;
 
  unsigned char row;
 
  MCUCR &= ~0x10;
  PORTD = 0x0f;
 
  for(row = 0x80; row != 0x08; row >>= 1)
  {
    DDRD = row;
_delay_ms(2);
   
    switch(row | ((~PIND) & 0x0f))
    {
      case 0x88:
      taster = '1'; break;
      case 0x84:
      taster = '2'; break;
      case 0x82:
      taster = '3'; break;
      case 0x81:
      taster = 'A'; break;

 case 0x48:
      taster = '4'; break;
      case 0x44:
      taster = '5'; break;
      case 0x42:
      taster = '6'; break;
      case 0x41:
      taster = 'B'; break;

 case 0x28:
      taster = '7'; break;
      case 0x24:
      taster = '8'; break;
      case 0x22:
      taster = '9'; break;
      case 0x21:
      taster = 'C'; break;

 case 0x18:
      taster = '*'; break;
      case 0x14:
      taster = '0'; break;
      case 0x12:
      taster = '#'; break;
      case 0x11:
      taster = 'D'; break;
    }
  }
 
  return taster;
}

void provera(){

}

int main()
{
  lcd.begin(16, 2);
  
  znak();
  
  lcd.setCursor(0,0);
  lcd.print("Prisitsni *");
  
  
while(1)
    {
 
  char taster = ocitaj_taster();
  /* if (taster != 0)
      {
        lcd.print(taster);
      _delay_ms(500);
      }
  */
 
 
  if(taster !=0 && pritisak == 1)
  {
    lcd.clear();
    pritisak = 0;
    if( taster == '*')
    {
   for ( int i = 0; i<4; i++)
   {
     redosled[i]=rand()%4;
     lcd.setCursor(i,0);
    lcd.write(byte(redosled[i]));  
    _delay_ms(3);
      }
 
      _delay_ms(2000);
      lcd.clear();
      
      for ( int i = 0; i<4; i++)
      {
      lcd.setCursor(i,0);
        lcd.write('-');
       _delay_ms(2);       
      } 
      lcd.setCursor(0,0);
      lcd.blink(); 
    }
   
    if(taster == '4'){
    	if(mesto_tastera > 0) mesto_tastera--;
          	lcd.setCursor(mesto_tastera , 0);
    } 
    
     if(taster == '6'){
    	if(mesto_tastera < 3) mesto_tastera++;
          	lcd.setCursor(mesto_tastera , 0);
    } 
    
    if(taster == '2')
    {
      brojac++;
      if(brojac>3) brojac = 0;
      lcd.setCursor(mesto_tastera,0);
      lcd.write(byte(brojac));
      _delay_ms(2);
    }
    
    if(taster == '8')
    {
      brojac++;
      if(brojac < 0) brojac = 3;
      lcd.setCursor(mesto_tastera,0);
      lcd.write(byte(brojac));
      _delay_ms(2);
    }
    if(taster == '5') provera();
    
  }if( taster == 0) pritisak = 1; 
  }
  return 0;
}